application {
  config {
    applicationType gateway
    authenticationType jwt
    baseName NoMoreWait
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework react
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1602325508709
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    embeddableLaunchScript false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    jhiPrefix jhi
    jhipsterVersion "6.10.3"
    jwtSecretKey "ZDZjMjk4ZjI3OGY2NzhjMjhiZjUzNDQ5MjU2MjFiY2Y0M2IxODY1Y2Q5ZjU0MWE2NTFhNGM1NjI3MmZiOTM4NDM0MzJlODc1ZDRlNmZhNDE1OTdlM2Y2ZjAzNWU0YWYyMTI0NzBiMGI3OTdkZjc0ZmNmYWVhMDBjOGJkNjU4MmU="
    languages [it, en, fr]
    messageBroker false
    nativeLanguage it
    otherModules []
    packageName com.pb.nomorewait
    prodDatabaseType mysql
    searchEngine false
    serverPort 8080
    serviceDiscoveryType eureka
    skipClient false
    skipServer false
    skipUserManagement false
    testFrameworks []
    useSass true
    websocket false
  }

  entities Address, Commerce, Person, Queue
}

entity Address {
  address String required,
  addressLine2 String,
  postalCode String,
  city String,
  stateProvince String
}
entity Commerce {
  identifier String
}
entity Person {
  firstName String required,
  lastName String required,
  email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/),
  phone String required
}
entity Queue {
  actCount Integer,
  maxCount Integer,
  creationDate Instant required,
  closeDate Instant,
  skipTurn Boolean
}
relationship OneToOne {
  Commerce{address} to Address,
  Commerce{user} to User,
  Person{address} to Address,
  Person{user} to User
}
relationship OneToMany {
  Queue{queue} to Person{person}
}
relationship ManyToOne {
  Queue{undefined} to Commerce
}

paginate Address with pagination
paginate Commerce, Person, Queue with infinite-scroll
service Commerce, Person, Queue with serviceImpl
